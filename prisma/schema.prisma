datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String @id
  name     String
  email    String @unique
  password String


  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  deleted_at DateTime?

  Operation  Operation[]
  Account    Account[]
  Category   Category[]
  CreditCard CreditCard[]

  @@map("users")
}

model Account {
  id       String   @id
  name     String
  currency Currency @default(BRL)

  user_id String
  user    User   @relation(fields: [user_id], references: [id])

  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  deleted_at DateTime?

  CreditCard CreditCard[]
  Operation  Operation[]

  @@map("accounts")
}

model CreditCard {
  id    String          @id
  name  String
  brand CreditCardBrand
  limit Float

  account_id String
  account    Account @relation(fields: [account_id], references: [id])

  user_id String
  user    User   @relation(fields: [user_id], references: [id])

  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  deleted_at DateTime?

  Operation Operation[]

  @@map("credit_cards")
}

model Category {
  id   String          @id
  name String
  type TransactionType

  user_id String
  user    User   @relation(fields: [user_id], references: [id])

  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  deleted_at DateTime?

  Operation Operation[]
}

model Operation {
  id      String          @id
  name    String
  value   Float
  type    TransactionType
  is_paid Boolean
  paid_at DateTime?       @default(now())

  user_id String
  user    User   @relation(fields: [user_id], references: [id])

  account_id String
  account    Account @relation(fields: [account_id], references: [id])

  category_id String
  category    Category @relation(fields: [category_id], references: [id])

  creditCard_id String?
  creditCard    CreditCard? @relation(fields: [creditCard_id], references: [id])

  created_at DateTime  @default(now())
  updated_at DateTime  @default(now()) @updatedAt
  deleted_at DateTime?
}

enum TransactionType {
  CreditCard
  Deposit
  FixedExpense
  VariableExpense
}

enum Currency {
  USD
  BRL
}

enum CreditCardBrand {
  AmericanExpress
  BNDES
  Dinners
  ELO
  HiperCard
  MasterCard
  Other
  SoroCard
  Visa
}
